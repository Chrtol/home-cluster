---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
   name: csi-rbd-sc
provisioner: rbd.csi.ceph.com
# If topology based provisioning is desired, delayed provisioning of
# PV is required and is enabled using the following attribute
# For further information read TODO<doc>
# volumeBindingMode: WaitForFirstConsumer
parameters:
   # (required) String representing a Ceph cluster to provision storage from.
   # Should be unique across all Ceph clusters in use for provisioning,
   # cannot be greater than 36 bytes in length, and should remain immutable for
   # the lifetime of the StorageClass in use.
   # Ensure to create an entry in the configmap named ceph-csi-config, based on
   # csi-config-map-sample.yaml, to accompany the string chosen to
   # represent the Ceph cluster in clusterID below
   clusterID: e4a4c987-4801-40ad-a6ae-bfdecbec3df4

   # (optional) If you want to use erasure coded pool with RBD, you need to
   # create two pools. one erasure coded and one replicated.
   # You need to specify the replicated pool here in the `pool` parameter, it is
   # used for the metadata of the images.
   # The erasure coded pool must be set as the `dataPool` parameter below.
   # dataPool: <ec-data-pool>

   # (required) Ceph pool into which the RBD image shall be created
   # (optional) If the topologyConstrainedPools is provided
   # eg: pool: rbdpool
   pool: vm-disks

   imageFeatures: "layering"

   # The secrets have to contain Ceph credentials with required access
   # to the 'pool'.
   csi.storage.k8s.io/provisioner-secret-name: ceph-secret
   csi.storage.k8s.io/provisioner-secret-namespace: ceph-csi-rbd

   csi.storage.k8s.io/controller-expand-secret-name: ceph-secret
   csi.storage.k8s.io/controller-expand-secret-namespace: ceph-csi-rbd

   csi.storage.k8s.io/node-stage-secret-name: ceph-secret
   csi.storage.k8s.io/node-stage-secret-namespace: ceph-csi-rbd

   # (optional) Specify the filesystem type of the volume. If not specified,
   # csi-provisioner will set default as `ext4`.
   csi.storage.k8s.io/fstype: ext4

reclaimPolicy: Delete
allowVolumeExpansion: true

# If filesystem is xfs, nouuid will be automatically added to mountOptions
mountOptions:
   - discard