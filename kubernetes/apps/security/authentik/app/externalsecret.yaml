---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name authentik-secret
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: *name
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        AUTHENTIK_POSTGRESQL__HOST: &dbhost postgres17-rw.database.svc.cluster.local
        AUTHENTIK_POSTGRESQL__NAME: &dbname "authentik"
        AUTHENTIK_POSTGRESQL__USER: &dbuser "{{ .POSTGRES_USER  }}"
        AUTHENTIK_POSTGRESQL__PASSWORD: &dbpass "{{ .POSTGRES_PASS  }}"

        # AUTHENTIK_STORAGE__MEDIA__BACKEND: "s3"
        # AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY: "{{ .AWS_ACCESS_KEY_ID }}"
        # AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY: "{{ .AWS_SECRET_ACCESS_KEY }}"
        # AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME: authentik-media
        # AUTHENTIK_STORAGE__MEDIA__S3__REGION: us-east-1
        # AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT: http://minio.storage.svc.cluster.local:9000
        # AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN: s3://authentik-media/

        AUTHENTIK_BOOTSTRAP_EMAIL: "{{ .AUTHENTIK_BOOTSTRAP_EMAIL }}"
        AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ .AUTHENTIK_BOOTSTRAP_PASSWORD }}"
        AUTHENTIK_BOOTSTRAP_TOKEN: "{{ .AUTHENTIK_BOOTSTRAP_TOKEN }}"
        AUTHENTIK_SECRET_KEY: "{{ .AUTHENTIK_SECRET_KEY }}"
        # CELERY_RESULT_BACKEND_URL: "db+postgresql://{{ .AUTHENTIK_POSTGRES_USER | urlquery }}:{{ .AUTHENTIK_POSTGRES_PASS | urlquery }}@postgres17-rw.database.svc.cluster.local/authentik"
        # CELERY_BROKER_URL: "sqla+postgresql://{{ .AUTHENTIK_POSTGRES_USER | urlquery }}:{{ .AUTHENTIK_POSTGRES_PASS | urlquery }}@postgres17-rw.database.svc.cluster.local/authentik"

        INIT_POSTGRES_HOST: *dbhost
        INIT_POSTGRES_DBNAME: *dbname
        INIT_POSTGRES_USER: *dbuser
        INIT_POSTGRES_PASS: *dbpass
        # INIT_POSTGRES_SUPER_USER: "{{ .POSTGRES_SUPER_USER }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"

  dataFrom:
    - extract:
        key: authentik
    - extract:
        key: cloudnative-pg