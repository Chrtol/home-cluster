# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lldap
  namespace: security
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false
  values:
    controllers:
      lldap:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:894a38169bf4135fb1e85a1112c64fc24a267d1191887cbf6fb8c0a17893770d
              pullPolicy: IfNotPresent
            # envFrom: &envFrom
            #   - secretRef:
            #       name: lldap-secret
            env:
              INIT_POSTGRES_SUPER_USER:
                valueFrom:
                  secretKeyRef:
                    name: cloudnative-pg-secret
                    key: username
              INIT_POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: cloudnative-pg-secret
                    key: password
              INIT_POSTGRES_DBNAME:
                valueFrom:
                  secretKeyRef:
                    name: lldap-secret
                    key: INIT_POSTGRES_DBNAME
              INIT_POSTGRES_HOST:
                valueFrom:
                  secretKeyRef:
                    name: lldap-secret
                    key: INIT_POSTGRES_HOST
              INIT_POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: lldap-secret
                    key: INIT_POSTGRES_USER
              INIT_POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: lldap-secret
                    key: INIT_POSTGRES_PASS
        containers:
          app:
            image:
              repository: ghcr.io/lldap/lldap
              tag: v0.6.1
            #envFrom: *envFrom
            env:
              TZ: ${SECRET_TIMEZONE}
              LLDAP_HTTP_PORT: &port 80
              LLDAP_HTTP_URL: https://lldap.${SECRET_DOMAIN}
              LLDAP_LDAP_PORT: &ldapPort 389
              LLDAP_LDAP_BASE_DN: dc=${SECRET_DOMAIN_NAME},dc=com
              #temp vars to reset lldap-deployment
              LLDAP_FORCE_UPDATE_PRIVATE_KEY: "true"
              LLDAP_FORCE_LDAP_USER_PASS_RESET: "true"
              LLDAP_JWT_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: lldap-secret
                    key: LLDAP_JWT_SECRET
              LLDAP_LDAP_USER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: lldap-secret
                    key: LLDAP_LDAP_USER_PASS
              LLDAP_LDAP_USER_EMAIL:
                valueFrom:
                  secretKeyRef:
                    name: lldap-secret
                    key: LLDAP_LDAP_USER_EMAIL
              LLDAP_SERVER_KEY_SEED:
                valueFrom:
                  secretKeyRef:
                    name: lldap-secret
                    key: LLDAP_SERVER_KEY_SEED
              LLDAP_DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    name: lldap-secret
                    key: LLDAP_DATABASE_URL
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 500Mi
    service:
      app:
        controller: lldap
        ports:
          http:
            port: *port
            primary: true
          ldap:
            enabled: true
            port: *ldapPort
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host lldap.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      data:
        enabled: true
        type: emptyDir
